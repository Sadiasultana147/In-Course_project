@model DeveloperCompany
@{
    ViewData["Title"] = "CreateDeveloperCompanyWithProject";
}


<div class="card bg-white" id="trade-card">
    <div class="card-header">
        <h4>Create Company</h4>
    </div>
    <div class="card-body">

        <div class="card-text">
            <form asp-action="CreateCompanyWithProject" id="formCompany">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group row">
                    <label asp-for="DeveloperCompanyName" class="col-form-label col-2 text-right"></label>

                    <div class="col-4">
                        <input asp-for="DeveloperCompanyName" class="form-control" />
                        <span asp-validation-for="DeveloperCompanyName" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group row">
                    <label asp-for="EstablishedDate" class="col-form-label col-2 text-right"></label>

                    <div class="col-4">
                        <input asp-for="EstablishedDate" class="form-control" />
                        <span asp-validation-for="EstablishedDate" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-6 text-right">
                        <button type="button" id="company-next" class="btn btn-primary btn-sm mr-3">Next</button>
                    </div>


                </div>
            </form>

        </div>


    </div>
</div>
<div class="card" id="project-card" style="display:none">
    <div class="card-header">Add Project</div>
    <div class="card-body">
        <form id="formProject">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Place Name</th>

                        <th></th>
                    </tr>
                </thead>
                <tbody id="projetTableBody"></tbody>
                <tfoot>
                    @await Html.PartialAsync("_ProjectAddRowPartial", new Project { })

                </tfoot>
            </table>
        </form>

    </div>
    <div class="card-footer">
        <div class="d-flex justify-content-end">
            <button type="button" class="btn btn-primary btn-sm" id="company-finish">
                Save & Finish
            </button>
        </div>
    </div>
</div>
<div class="card bg-white">
    <div class="card-footer">
        <div class="d-flex">
            <a class="card-link" asp-action="Index"><span class="fa fa-long-arrow-left"></span> Back to list</a>
            <a class="card-link ml-auto" asp-action="Create" asp-controller="Projects">Assign Project <span class="fa fa-long-arrow-right"></span></a>
        </div>
    </div>
</div>

<div aria-live="polite" aria-atomic="true" style="position: absolute; top:70px; right:1rem; min-height: 200px;">
    <!-- Position it -->
    <div style="position: absolute; top: 70px; right: 0;min-width:200px">

        <!-- Then put toasts within -->
        <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-delay="3000" id="toastCompany">
            <div class="toast-header">

                <strong class="mr-auto">Warning</strong>
                <small class="text-muted">error</small>
                <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="toast-body">
                There are some errors
            </div>
        </div>

        <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-delay="3000" id="toastProject">
            <div class="toast-header">

                <strong class="mr-auto">Warning</strong>
                <small class="text-muted">missing</small>
                <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="toast-body">
                No project added.
            </div>
        </div>
        <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-delay="3000" id="toastResult">
            <div class="toast-header">

                <strong class="mr-auto">Success</strong>
                <small class="text-muted">saved</small>
                <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="toast-body">
                Data saved successfully.
            </div>
        </div>
    </div>
</div>
@section styles {

    <environment include="Development">
        <link href="~/libs/fontawesome/css/font-awesome.css" rel="stylesheet" />

    </environment>
}
@section scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <environment include="Development">


        <script>
            var developerCompany = {
                Projects: []
            };
            $(document).ready(function () {
                $("#company-next").click(() => {
                    var valid = $('form#formProject').valid();
                    if (valid) {

                        $("#project-card").show();
                    }
                    else $("#project-card").hide();
                });
                $("button.add").click(function () {
                    //console.log($("#ProjectName").val());
                    if (!$("#formProject").valid()) return;
                    developerCompany.Projects.push({ PlaceName: $("#PlaceName").val() });
                    fillProjectTable();

                    $("#PlaceName").val("");
                    
                });

                $("#company-finish").click(() => {
                    var valid = $('form#formCompany').valid();
                    if (!valid) {
                        $('#toastCompany').toast('show');
                    }
                    if (developerCompany.Projects.length == 0) {
                        $('#toastProject').toast('show');
                    }
                    if (!valid || developerCompany.Projects.length == 0) return;
                    developerCompany.DeveloperCompanyName = $('#DeveloperCompanyName').val();
                    developerCompany.EstablishedDate = $('#EstablishedDate').val();

                    console.log(developerCompany);
                    var dataType = 'application/json; charset=utf-8';
                    $.ajax({
                        type: "POST",
                        url: "/DeveloperCompany/CreateDeveloperCompanyWithProject",
                        dataType: "json",
                        contentType: "application/json",
                        data: JSON.stringify(developerCompany),
                        complete: function (jqXHR) {
                            if (jqXHR.readyState === 4) {

                                var r = JSON.parse(jqXHR.responseText);
                                console.log(r);
                                if (r.success == true) {
                                    console.log('ok');
                                    $('#toastResult').toast('show');
                                    $('form#formCompany').trigger('reset');
                                    developerCompany = {
                                        Projects: []
                                    };
                                    $("#projectTableBody").empty();
                                }


                            }
                        }
                    });
                });
            });
            function fillProjectTable() {
                $("#projetTableBody").empty();
                //console.log(developerCompany);
                var i = developerCompany.Projects.length - 1;
                for (var i = 0; i < developerCompany.Projects.length; i++) {
                    $(`<tr>
                        <td>${developerCompany.Projects[i].PlaceName}</td>
                        
                        <td><button type='button' class="btn btn-danger btn-sm del-project" data-index=${i}><span class="fa fa-trash"></span></button></td>
                        </tr>`)
                        .appendTo($("#projetTableBody"));
                }
                $("button.del-project").click(function () {

                    var index = $(this).data("index");
                    developerCompany.Projects.splice(index, 1);
                    $(this).closest("tr").remove();
                });


            }
        </script>
    </environment>
}

